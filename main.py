from aiogram import Bot, Dispatcher, executor, types
from scripts.youtube import download as ytDownload
from scripts.facebook import download as fbDownload  
import os
import shutil
import uuid
import asyncio
from dotenv import load_dotenv

load_dotenv()

API_TOKEN = os.getenv("API_TOKEN")

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def startHandler(msg: types.Message):
    await msg.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É —Å YouTube –∏–ª–∏ Facebook, –∏ —è —Å–∫–∞—á–∞—é —Ç–µ–±–µ –í–∏–¥–µ–æ –∏ –ê—É–¥–∏–æ."
    )


@dp.message_handler()
async def handle_links(msg: types.Message):
    url = msg.text.strip()
    session_id = str(uuid.uuid4())
    temp_dir = f"./media_temp/{session_id}"
    os.makedirs(temp_dir, exist_ok=True)

    # YouTube
    if (
        url.startswith("https://youtu.be/")
        or url.startswith("https://www.youtube.com/")
        or url.startswith("https://youtube.com/")
    ):
        await msg.reply("üì∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ YouTube –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏...")

        try:
            audio_path, video_path, output_path = ytDownload(url, session_id)

            with open(output_path, "rb") as videoFile:
                await bot.send_video(
                    msg.chat.id,
                    video=videoFile,
                    caption="‚úÖ –í–∏–¥–µ–æ —Å YouTube –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å @some_think_bot",
                )

            with open(audio_path, "rb") as audioFile:
                await bot.send_audio(
                    msg.chat.id,
                    audio=audioFile,
                    caption="üéµ –ê—É–¥–∏–æ YouTube —Å–∫–∞—á–∞–Ω–æ —Å @some_think_bot",
                )

        except Exception as e:
            await msg.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")

        finally:
            shutil.rmtree(temp_dir, ignore_errors=True)

    # Facebook
    elif url.startswith("https://www.facebook.com/") or url.startswith("https://fb.watch/"):
        await msg.reply("üì∏ –û–±—Ä–∞–±–æ—Ç–∫–∞ Facebook –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏...")

        try:
            audio_path, video_path, output_path = fbDownload(url, session_id)

            if not os.path.exists(output_path):
                await msg.reply("‚ùå –í–∏–¥–µ–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return
            if not os.path.exists(audio_path):
                await msg.reply("‚ùå –ê—É–¥–∏–æ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                return

            with open(output_path, "rb") as video_file:
                await bot.send_video(
                    msg.chat.id,
                    video=video_file,
                    caption="‚úÖ –í–∏–¥–µ–æ —Å Facebook –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Å @some_think_bot",
                )

            with open(audio_path, "rb") as audio_file:
                await bot.send_audio(
                    msg.chat.id,
                    audio=audio_file,
                    caption="üéµ –ê—É–¥–∏–æ Facebook —Å–∫–∞—á–∞–Ω–æ —Å @some_think_bot",
                )

        except Exception as e:
            await msg.reply(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {e}")

        finally:
            shutil.rmtree(temp_dir, ignore_errors=True)

    else:
        await msg.reply("‚ö†Ô∏è –Ø –ø—Ä–∏–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ —Å YouTube –∏ Facebook.")


async def on_startup(dp):
    print("Bot is started!")


if __name__ == "__main__":
    executor.start_polling(dp, on_startup=on_startup)
